#!/usr/bin/env python3
# beam: Scripts for Me
# Copyright 2017 Matt LaChance
#
# This file is part of beam.
#
# beam is free software: you can redistribute it and/or modify it under
# the terms of the GNU General Public License as published by the Free
# Software Foundation, either version 3 of the License, or (at your
# option) any later version.
#
# beam is distributed in the hope that it will be useful, but WITHOUT
# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
# FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License
# for more details.
#
# You should have received a copy of the GNU General Public License
# along with beam. If not, see <http://www.gnu.org/licenses/>.
from subprocess import Popen, PIPE
from sys import argv

def changes_have_been_made():
    proc = Popen(["git", "status", "--porcelain"], stdout=PIPE)
    output = proc.communicate()
    return bool(output[0])

def shell_success (sh_command):
    proc = Popen(sh_command, shell=True)
    return proc.wait() == 0

def sh_quote (s):
    if "'" in s:
        return '"{}"'.format(s.replace("\\", "\\\\")
                              .replace('"', '\\"')
                              .replace("`", "\\`")
                              .replace("$", "\\$"))

    else:
        return "'{}'".format(s)

def commit_unless_flocking():
    proc = Popen(["git", "log", "--oneline", "--color=never"],
                 stdout=PIPE)
    output = proc.communicate()[0]
    lines = output.split(b"\n")

    for emoji in (line.split(b" ")[1] for line in lines):
        if emoji == b":construction:":
            return False

        if emoji == b":muscle:":
            continue

        break

    return commit()

def commit():
    command = ["git commoji"]
    command.extend(sh_quote(x) for x in argv[1:])
    return shell_success(" ".join(command))

def show_history():
    shell_success("git emoji -- --oneline --graph | head -n 5")

if shell_success("make test"):
    if changes_have_been_made():
        shell_success("git add .")

        if commit_unless_flocking():
            shell_success("git vain")
            show_history()
            raise SystemExit(0)

    shell_success("git status")
    show_history()

else:
    shell_success("git diff")
